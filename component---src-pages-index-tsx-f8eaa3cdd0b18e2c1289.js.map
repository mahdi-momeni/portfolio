{"version":3,"file":"component---src-pages-index-tsx-f8eaa3cdd0b18e2c1289.js","mappings":"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","sources":["webpack://my-gatsby-blog/./src/components/Heading.js","webpack://my-gatsby-blog/./src/pages/index.tsx","webpack://my-gatsby-blog/./src/components/Hero.js","webpack://my-gatsby-blog/./src/components/Post.js","webpack://my-gatsby-blog/./src/components/Posts.js","webpack://my-gatsby-blog/./src/data/projectsList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Heading = ({ title, description, slug }) => {\n  return (\n    <h2 className=\"home-heading\">\n      <div>\n        <div className=\"title\">{title}</div>\n        {description && <div className=\"description\">{description}</div>}\n      </div>\n      {slug && (\n        <Link className=\"button\" to={slug}>\n          نمایش همه\n        </Link>\n      )}\n    </h2>\n  )\n}\n","import React, { useMemo } from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Helmet from \"react-helmet\";\nimport Img from \"gatsby-image\";\nimport { Layout } from \"../components/Layout\";\nimport { Posts } from \"../components/Posts\";\nimport { SEO } from \"../components/SEO\";\nimport { Heading } from \"../components/Heading\";\nimport { Hero } from \"../components/Hero\";\nimport { projectsList } from \"../data/projectsList\";\nimport { getSimplifiedPosts } from \"../utils/helpers\";\nimport config from \"../utils/config\";\n\nexport default function Index({ data }) {\n  const latest = data.latestBlog.edges;\n  const highlights = [];\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest]);\n  const simplifiedHighlights = useMemo(\n    () =>\n      getSimplifiedPosts(highlights, { shortTitle: true, thumbnails: true }),\n    [highlights]\n  );\n  return (\n    <div>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <div className=\"container\">\n        <div className=\"hero-wrapper\">\n          <Hero title=\"سلام، من مهدی‌ام\" index>\n            <p className=\"hero-description small width\">\n              به باغچه دیجیتال من خوش آمدید 🌱\n              <br />\n              <br />\n              من توسعه دهنده نرم افزار هستم.من{\" \"}\n               <Link to=\"/projects\">پروژه های اوپن سورس </Link> میسازم\n                و در مورد مهندسی\n              نرم افزار تجربه میکنم و میخونم و اینجا  {\" \"}\n              <Link to=\"/blog\">مینویسم</Link>\n            </p>\n          </Hero>\n          <div className=\"decoration\">\n            <img\n              src={`${config.assetsBasePath}/ram.png`}\n              alt=\"RAM Ram\"\n              className=\"image hero-image\"\n              title=\"RAM Ram\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <section className=\"segment first\">\n          <Heading title=\"آخرین پست‌ها\" slug=\"/blog\" />\n\n          <Posts data={simplifiedLatest} newspaper />\n        </section>\n\n        {/* <section className=\"segment large\">\n          <Heading title=\"پرطرفدارها\" />\n\n          <div className=\"highlight-preview\">\n            {simplifiedHighlights.map((post) => {\n              return (\n                <div className=\"muted card flex\" key={`popular-${post.slug}`}>\n                  {post.thumbnail && <Img fixed={post.thumbnail} />}\n                  <div>\n                    <time>{post.date}</time>\n                    <Link className=\"card-header\" to={post.slug}>\n                      {post.title}\n                    </Link>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </section> */}\n\n        <section className=\"segment large\">\n          <Heading title=\"پروژه‌ها\" slug=\"/projects\" />\n\n          <div className=\"post-preview\">\n            {projectsList\n              .filter((project) => project.highlight)\n              .map((project) => {\n                return (\n                  <div className=\"anchored card\" key={project.slug}>\n                    <div>\n                      <time>{project.date}</time>\n                      <a\n                        className=\"card-header\"\n                        href={`https://github.com/taniarascia/${project.slug}`}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {project.name}\n                      </a>\n                      <p>{project.tagline}</p>\n                    </div>\n                    <div className=\"anchored links\">\n                      {project.writeup && (\n                        <Link className=\"button\" to={project.writeup}>\n                          Article\n                        </Link>\n                      )}\n                      <a className=\"button flex\" href={project.url}>\n                        Demo\n                      </a>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </section>\n\n        {/* <section className=\"segment large\">\n          <Heading title=\"Newsletter\" />\n          <p>\n            Sign up to get updates when I write something new. No spam ever.\n          </p>\n          <p>\n            <a\n              href=\"https://taniarascia.substack.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"button large highlighted\"\n            >\n              Subscribe to the Newsletter\n            </a>\n          </p>\n        </section> */}\n      </div>\n    </div>\n  );\n}\n\nIndex.Layout = Layout;\n\nexport const blogQuery = graphql`\n  query MyQuery {\n    latestBlog: allMarkdownRemark(\n      limit: 10\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            categories\n            slug\n            shortTitle\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\n\nexport const Hero = ({ highlight, subTitle, title, children, index }) => {\n  return (\n    <header className={`hero ${index ? 'index' : ''}`}>\n      {subTitle && (\n        <div className=\"sub-title\">\n          {highlight && <span className=\"highlight\">{highlight}</span>}\n          {subTitle}\n        </div>\n      )}\n      {title && <h1>{title}</h1>}\n      {children && children}\n    </header>\n  )\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport {\n  georgianToPersianDigits,\n  getFormattedDate,\n  monthsEnum,\n} from \"../utils/helpers\";\n\nexport const Post = ({ node, prefix, newspaper }) => {\n  let formattedDate;\n\n  if (node.date) {\n    if (!newspaper) {\n      const dateArr = node.date.split(\"/\");\n      formattedDate =\n        parseInt(dateArr[2]) + \" \" + monthsEnum[parseInt(dateArr[1])];\n    } else {\n      formattedDate = getFormattedDate(node.date);\n    }\n  }\n  console.log(node)\n  return (\n    <Link to={node.slug} key={node.id} className=\"post\">\n      <h3>{node.shortTitle}</h3>\n      <time>{georgianToPersianDigits(formattedDate)}</time>\n    </Link>\n  );\n};\n","import React, { useMemo } from \"react\";\n\nimport { Post } from \"./Post\";\nimport { georgianToPersianDigits } from \"../utils/helpers\";\n\nexport const Posts = ({\n  data = [],\n  showYears,\n  query,\n  prefix,\n  hideDate,\n  yearOnly,\n  ...props\n}) => {\n  const postsByYear = useMemo(() => {\n    const collection = {};\n\n    data.forEach((post) => {\n      const year = post.date?.split(\"/\")[0];\n\n      collection[year] = [...(collection[year] || []), post];\n    });\n\n    return collection;\n  }, [data]);\n  const years = useMemo(\n    () => Object.keys(postsByYear).reverse(),\n    [postsByYear]\n  );\n  if (showYears) {\n    return years.map((year) => (\n      <section key={year} className=\"segment\">\n        <h2 className=\"year\">{georgianToPersianDigits(year)}</h2>\n        <div className=\"posts\">\n          {postsByYear[year].map((node) => (\n            <Post key={node.id} node={node} query={query} prefix={prefix} />\n          ))}\n        </div>\n      </section>\n    ));\n  } else {\n    return (\n      <div className={props.newspaper ? \"posts newspaper\" : \"posts\"}>\n        {data.map((node) => {\n          return (\n            <Post\n              key={node.id}\n              node={node}\n              query={query}\n              prefix={prefix}\n              hideDate={hideDate}\n              yearOnly={yearOnly}\n              {...props}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n};\n","export const projectsList = [\n  {\n    name: \"react boilerplate\",\n    date: \"‍۱۴۰۲\",\n    slug: \"react-boilerplate\",\n    tagline:\n      \"این پروژه شامل ساختار و کانفیگ اولیه برای پروژه های ری اکتی هست.\",\n    highlight: true,\n  },\n  {\n    name: \"nextjs-boilerplate\",\n    date: \"‍۱۴۰۲\",\n    slug: \"nextjs-boilerplate\",\n    tagline:\n      \"هدف از این پروژه ارایه ساختار اولیه برای پروژه‌های nextjs هستش. توی این پروژه کانفیگ ها بیسی که توی تمام پروژه ها به درد میخوره اضافه میکنم\",\n    highlight: true,\n  },\n  {\n    name: \"webdev-bashrc\",\n    date: \"‍۱۴۰۲\",\n    slug: \"webdev-bashrc\",\n    tagline:\n      \"هدف از این پروژه بهبود تجربه ترمینال برای توسعه وب و ارائه alias متدها و توابع کاربردی است\",\n    // url: \"https://www.keyboardaccordion.com\",\n    // writeup: \"/musical-instrument-web-audio-api\",\n    highlight: true,\n  },\n  {\n    name: \"Dashlib.css\",\n    date: \"۱۳۹۸\",\n    slug: \"Dashlib.css\",\n    tagline: \"اولین کتبخونه ام و جز اولین css utility libraryها :))\",\n  },\n];\n"],"names":["Heading","title","description","slug","className","Link","to","Index","data","latest","latestBlog","edges","highlights","simplifiedLatest","useMemo","getSimplifiedPosts","shortTitle","thumbnails","React","Helmet","config","SEO","Hero","index","src","alt","Posts","newspaper","projectsList","project","highlight","map","key","date","href","target","rel","name","tagline","writeup","url","Layout","subTitle","children","Post","formattedDate","node","prefix","getFormattedDate","dateArr","split","parseInt","monthsEnum","console","log","id","georgianToPersianDigits","showYears","query","hideDate","yearOnly","props","postsByYear","collection","forEach","post","year","years","Object","keys","reverse"],"sourceRoot":""}