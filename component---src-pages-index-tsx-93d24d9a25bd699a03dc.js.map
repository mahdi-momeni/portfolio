{"version":3,"file":"component---src-pages-index-tsx-93d24d9a25bd699a03dc.js","mappings":"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","sources":["webpack://my-gatsby-blog/./src/components/Heading.js","webpack://my-gatsby-blog/./src/pages/index.tsx","webpack://my-gatsby-blog/./src/components/Hero.js","webpack://my-gatsby-blog/./src/components/Post.js","webpack://my-gatsby-blog/./src/components/Posts.js","webpack://my-gatsby-blog/./src/data/projectsList.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nexport const Heading = ({ title, description, slug }) => {\n  return (\n    <h2 className=\"home-heading\">\n      <div>\n        <div className=\"title\">{title}</div>\n        {description && <div className=\"description\">{description}</div>}\n      </div>\n      {slug && (\n        <Link className=\"button\" to={slug}>\n          نمایش همه\n        </Link>\n      )}\n    </h2>\n  )\n}\n","import React, { useMemo } from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Helmet from \"react-helmet\";\nimport Img from \"gatsby-image\";\nimport { Layout } from \"../components/Layout\";\nimport { Posts } from \"../components/Posts\";\nimport { SEO } from \"../components/SEO\";\nimport { Heading } from \"../components/Heading\";\nimport { Hero } from \"../components/Hero\";\nimport { projectsList } from \"../data/projectsList\";\nimport { getSimplifiedPosts } from \"../utils/helpers\";\nimport config from \"../utils/config\";\n\nexport default function Index({ data }) {\n  const latest = data.latestBlog.edges;\n  const highlights = [];\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest]);\n  const simplifiedHighlights = useMemo(\n    () =>\n      getSimplifiedPosts(highlights, { shortTitle: true, thumbnails: true }),\n    [highlights]\n  );\n  return (\n    <div>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n\n      <div className=\"container\">\n        <div className=\"hero-wrapper\">\n          <Hero title=\"سلام، من مهدی‌ام\" index>\n            <p className=\"hero-description small width\">\n              به باغچه دیجیتال من خوش آمدید 🌱\n              <br />\n              <br />\n              من توسعه دهنده نرم افزار هستم.من{\" \"}\n               <Link to=\"/projects\">پروژه های اوپن سورس </Link> میسازم\n                و در مورد مهندسی\n              نرم افزار تجربه میکنم و میخونم و اینجا  {\" \"}\n              <Link to=\"/blog\">مینویسم</Link>\n            </p>\n          </Hero>\n          <div className=\"decoration\">\n            <img\n              src=\"/ram.png\"\n              alt=\"RAM Ram\"\n              className=\"image hero-image\"\n              title=\"RAM Ram\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <section className=\"segment first\">\n          <Heading title=\"آخرین پست‌ها\" slug=\"/blog\" />\n\n          <Posts data={simplifiedLatest} newspaper />\n        </section>\n\n        <section className=\"segment large\">\n          <Heading title=\"پرطرفدارها\" />\n\n          <div className=\"highlight-preview\">\n            {simplifiedHighlights.map((post) => {\n              return (\n                <div className=\"muted card flex\" key={`popular-${post.slug}`}>\n                  {post.thumbnail && <Img fixed={post.thumbnail} />}\n                  <div>\n                    <time>{post.date}</time>\n                    <Link className=\"card-header\" to={post.slug}>\n                      {post.title}\n                    </Link>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </section>\n\n        <section className=\"segment large\">\n          <Heading title=\"پروژه‌ها\" slug=\"/projects\" />\n\n          <div className=\"post-preview\">\n            {projectsList\n              .filter((project) => project.highlight)\n              .map((project) => {\n                return (\n                  <div className=\"anchored card\" key={project.slug}>\n                    <div>\n                      <time>{project.date}</time>\n                      <a\n                        className=\"card-header\"\n                        href={`https://github.com/taniarascia/${project.slug}`}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        {project.name}\n                      </a>\n                      <p>{project.tagline}</p>\n                    </div>\n                    <div className=\"anchored links\">\n                      {project.writeup && (\n                        <Link className=\"button\" to={project.writeup}>\n                          Article\n                        </Link>\n                      )}\n                      <a className=\"button flex\" href={project.url}>\n                        Demo\n                      </a>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>\n        </section>\n\n        {/* <section className=\"segment large\">\n          <Heading title=\"Newsletter\" />\n          <p>\n            Sign up to get updates when I write something new. No spam ever.\n          </p>\n          <p>\n            <a\n              href=\"https://taniarascia.substack.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"button large highlighted\"\n            >\n              Subscribe to the Newsletter\n            </a>\n          </p>\n        </section> */}\n      </div>\n    </div>\n  );\n}\n\nIndex.Layout = Layout;\n\nexport const blogQuery = graphql`\n  query MyQuery {\n    latestBlog: allMarkdownRemark(\n      limit: 10\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            categories\n            slug\n            shortTitle\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\n\nexport const Hero = ({ highlight, subTitle, title, children, index }) => {\n  return (\n    <header className={`hero ${index ? 'index' : ''}`}>\n      {subTitle && (\n        <div className=\"sub-title\">\n          {highlight && <span className=\"highlight\">{highlight}</span>}\n          {subTitle}\n        </div>\n      )}\n      {title && <h1>{title}</h1>}\n      {children && children}\n    </header>\n  )\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport {\n  georgianToPersianDigits,\n  getFormattedDate,\n  monthsEnum,\n} from \"../utils/helpers\";\n\nexport const Post = ({ node, prefix, newspaper }) => {\n  let formattedDate;\n\n  if (node.date) {\n    if (!newspaper) {\n      const dateArr = node.date.split(\"/\");\n      formattedDate =\n        parseInt(dateArr[2]) + \" \" + monthsEnum[parseInt(dateArr[1])];\n    } else {\n      formattedDate = getFormattedDate(node.date);\n    }\n  }\n  return (\n    <Link to={node.slug} key={node.id} className=\"post\">\n      <h3>{node.title}</h3>\n      <time>{georgianToPersianDigits(formattedDate)}</time>\n    </Link>\n  );\n};\n","import React, { useMemo } from \"react\";\n\nimport { Post } from \"./Post\";\nimport { georgianToPersianDigits } from \"../utils/helpers\";\n\nexport const Posts = ({\n  data = [],\n  showYears,\n  query,\n  prefix,\n  hideDate,\n  yearOnly,\n  ...props\n}) => {\n  const postsByYear = useMemo(() => {\n    const collection = {};\n\n    data.forEach((post) => {\n      const year = post.date?.split(\"/\")[0];\n\n      collection[year] = [...(collection[year] || []), post];\n    });\n\n    return collection;\n  }, [data]);\n  const years = useMemo(\n    () => Object.keys(postsByYear).reverse(),\n    [postsByYear]\n  );\n  if (showYears) {\n    return years.map((year) => (\n      <section key={year} className=\"segment\">\n        <h2 className=\"year\">{georgianToPersianDigits(year)}</h2>\n        <div className=\"posts\">\n          {postsByYear[year].map((node) => (\n            <Post key={node.id} node={node} query={query} prefix={prefix} />\n          ))}\n        </div>\n      </section>\n    ));\n  } else {\n    return (\n      <div className={props.newspaper ? \"posts newspaper\" : \"posts\"}>\n        {data.map((node) => {\n          return (\n            <Post\n              key={node.id}\n              node={node}\n              query={query}\n              prefix={prefix}\n              hideDate={hideDate}\n              yearOnly={yearOnly}\n              {...props}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n};\n","export const projectsList = [\n  {\n    name: \"webdev-bashrc\",\n    date: \"‍۱۴۰۲\",\n    slug: \"webdev-bashrc\",\n    tagline:\n      \"هدف از این پروژه بهبود تجربه ترمینال برای توسعه وب و ارائه alias متدها و توابع کاربردی است\",\n    // url: \"https://www.keyboardaccordion.com\",\n    // writeup: \"/musical-instrument-web-audio-api\",\n    highlight: true,\n  },\n  {\n    name: \"Dashlib.css\",\n    date: \"۱۳۹۸\",\n    slug: \"Dashlib.css\",\n    tagline: \"اولین کتبخونه ام و جز اولین css utility libraryها :))\",\n  },\n];\n"],"names":["Heading","title","description","slug","className","Link","to","Index","data","latest","latestBlog","edges","highlights","simplifiedLatest","useMemo","getSimplifiedPosts","simplifiedHighlights","shortTitle","thumbnails","React","Helmet","config","SEO","Hero","index","src","alt","Posts","newspaper","map","post","key","thumbnail","Img","fixed","date","projectsList","project","highlight","href","target","rel","name","tagline","writeup","url","Layout","subTitle","children","Post","formattedDate","node","prefix","getFormattedDate","dateArr","split","parseInt","monthsEnum","id","georgianToPersianDigits","showYears","query","hideDate","yearOnly","props","postsByYear","collection","forEach","year","years","Object","keys","reverse"],"sourceRoot":""}